#!/usr/bin/env node

/**
 * Module dependencies.
 */

// Require the config file
const config = require('config');
// Change this to require correct thing and execute with my requirement
const app = require('../App')(config);
const debug = require('debug')('todoAppTest:server');
const http = require('http');

/**
 * Get port from environment and store in Express.
 */

// Make this variable to extract the port number from the 'default' json object file
// var port = config.get('server.port');
// app.set('port', port);

// Alternatively I can make target machine set the port number as an environmental variable like so
var port = process.env.PORT || 3001;
app.set(port);

/**
 * Create HTTP server.
 */

var server = http.createServer(app);

/**
 * Listen on provided port, on all network interfaces.
 */

server.listen(port);
server.on('error', onError);
server.on('listening', onListening);

// Deleted 'Normalize Port' section as it was no longer needed

/**
 * Event listener for HTTP server "error" event.
 */

function onError(error) {
    if (error.syscall !== 'listen') {
        throw error;
    }

    var bind = typeof port === 'string'
        ? 'Pipe ' + port
        : 'Port ' + port;

    // handle specific listen errors with friendly messages
    switch (error.code) {
        case 'EACCES':
            console.error(bind + ' requires elevated privileges');
            process.exit(1);
            break;
        case 'EADDRINUSE':
            console.error(bind + ' is already in use');
            process.exit(1);
            break;
        default:
            throw error;
    }
}

/**
 * Event listener for HTTP server "listening" event.
 */

function onListening() {
    var addr = server.address();
    var bind = typeof addr === 'string'
        ? 'pipe ' + addr
        : 'port ' + addr.port;
    debug('Listening on ' + bind);
}
